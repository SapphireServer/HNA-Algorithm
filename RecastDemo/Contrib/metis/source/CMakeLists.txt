cmake_minimum_required(VERSION 3.7)

project(GraphLab)

set (CMAKE_C_STANDARD 99)

# if(CMAKE_COMPILER_IS_GNUCXX)
#   # metis is so full of warnings
#   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -w -DLINUX -std=c99 -D_FILE_OFFSET_BITS=64")
#   set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -w -DLINUX -std=c99 -D_FILE_OFFSET_BITS=64") 
#   set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -w -DLINUX -std=c99 -D_FILE_OFFSET_BITS=64")     
#   set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -w -DLINUX -std=c99 -D_FILE_OFFSET_BITS=64")  
# endif(CMAKE_COMPILER_IS_GNUCXX)
# 
# IF(APPLE)
#   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDARWIN ") 
#   set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DDARWIN")
#   set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DDARWIN")
# ENDIF(APPLE)
# 

add_definitions(-D_FILE_OFFSET_BITS=64)

if(UNIX)
  add_definitions(-DLINUX)
endif()

if (CMAKE_BUILD_TYPE MATCHES "Release") 
  set(METIS_BUILD_OPTS "${CMAKE_C_FLAGS_RELEASE} -w") 
elseif(CMAKE_BUILD_TYPE MATCHES "Debug")
  set(METIS_BUILD_OPTS "${CMAKE_C_FLAGS_DEBUG} -w")
endif()


IF(APPLE)
  set(METIS_BUILD_OPTS "${METIS_BUILD_OPTS} -DDARWIN")
ENDIF(APPLE)


include_directories( 
  .
  GKlib
  libmetis
  C:/local/gnuwin32/include
)


subdirs(GKlib libmetis)

